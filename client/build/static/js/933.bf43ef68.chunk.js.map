{"version":3,"file":"static/js/933.bf43ef68.chunk.js","mappings":"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","sources":["widgets/navBar/ui/NavBar.jsx","shared/api/tasks.js","shared/utils/create-query-string.js","features/task-list/lib/constants.js","features/task-list/model/define-priority.js","shared/hooks/useQuery.js","shared/consts/query-constants.js","features/task-list/ui/components/TaskModal.jsx","features/task-form/lib/constants.js","shared/ui/Form/SimpleSelect.jsx","features/task-form/ui/components/PriorityField.jsx","shared/ui/Form/SingleDateField.jsx","shared/ui/Form/TextArea.jsx","features/task-form/model/validator.js","shared/ui/Containers/CenteredContainer.jsx","features/task-form/ui/AddTaskForm.jsx","features/task-form/ui/TaskFormModal.jsx","features/task-form/ui/EditTaskForm.jsx","features/task-form/ui/EditTaskFormModal.jsx","features/task-list/ui/components/Task.jsx","features/task-list/ui/components/SortTasks.jsx","features/task-list/ui/TaskList.jsx","pages/Home/index.jsx","shared/ui/BaseButton/index.jsx","shared/ui/Form/LeftLabel.jsx","shared/ui/Form/SimpleTextField.jsx","shared/ui/Form/constants.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from 'shared/auth';\nimport BaseButton from 'shared/ui/BaseButton';\n\nconst NavBar = () => {\n  const { logout } = useAuth();\n  const handleLogOut = async() => {\n    await logout()\n  }\n\n  return (\n    <nav className=\"navbar\" style={{ backgroundColor: '#e3f2fd' }}>\n      <div className=\"container-fluid\">\n        <Link to='/' className=\"navbar-brand\">Taskin MS</Link>\n        <BaseButton onClick={handleLogOut}>Log out</BaseButton>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import http from 'shared/http';\nimport { createQueryString } from 'shared/utils/create-query-string';\n\nconst taskURL = '/api/task';\n\nexport const getTasks = (filter, sorter, page) => {\n  const queryString = createQueryString(filter, sorter, page);\n  return http.get(`${taskURL}${queryString}`)\n}\n\nexport const getTaskById = id => {\n  return http.get(`${taskURL}/${id}`)\n}\n\nexport const addTask = data => {\n  return http.post(taskURL, data)\n}\n\nexport const deleteTask = id => {\n  return http.delete(`${taskURL}/${id}`)\n}\n\nexport const editTask = data => {\n  return http.put(`${taskURL}/${data._id}`, data)\n}\n\nexport const changeIsDone = id => {\n  return http.put(`${taskURL}/changeIsDone/${id}`)\n}\n","import { isEmpty } from \"lodash\"\n\nexport const createQueryString = (filter, sorter, page) => {\n  let queryString = '';\n  if (!isEmpty(filter)) {\n    Object.keys(filter).forEach( key => {\n      queryString = `${queryString}&${key}=${filter[key]}`\n    }) \n  }\n  if (!isEmpty(sorter)) {\n    let sortingString = '';\n    sorter.forEach( sortStr => {\n      sortingString = `${!isEmpty(sortingString) ? ',' : ''}`;\n      sortingString = `${sortingString}${sortStr}`;\n    })\n\n    if (!isEmpty(queryString)) {\n      queryString = `${queryString}&sort=${sortingString}`\n    } else {\n      queryString = `sort=${sortingString}`\n    }\n  }\n  if (!isEmpty(filter) && !isEmpty(sorter)) {\n    return ''\n  } else {\n    return `?${queryString}`\n  }\n}\n","export const taskListCardStyles = {\n  maxWidth: '40rem',\n  minWidth: '60%'\n}\n\nexport const taskTitles = {\n  description: 'Description',\n  priority: 'Priority',\n  dueDate: 'Due Date'\n}\n\n// export const sortOptions = {\n//   isActive: 'sort=isDone:0',\n//   isDone: 'sort=isDone:-1',\n//   byDueDate: 'sort=dueDate:1',\n//   higherPriority: 'sort=priority:-1'\n// }\n\nexport const sortOptions = [\n  {\n    value: 'isDone:0',\n    name: 'active first'\n  },\n  {\n    value: 'isDone:-1',\n    name: 'completed first'\n  },\n  {\n    value: 'dueDate:1',\n    name: 'duration date'\n  },\n  {\n    value: 'priority:-1',\n    name: 'by higher priority'\n  }\n]\n","export const definePriority = priority => {\n  switch(priority) {\n    case 1:\n      return 'low'\n    case 2:\n      return 'medium'\n    case 3:\n      return 'high'\n    case 4:\n      return 'hot'\n  }\n}\n","import { getTaskById, getTasks } from 'shared/api/tasks';\nimport { useQuery } from 'react-query';\nimport {\n  signleTaskQueryKey,\n  tasksQueryKey\n} from 'shared/consts/query-constants';\nimport { definePriority } from 'features/task-list/model/define-priority';\n\nexport const useTasksQuery = (filter, sorter) => {\n  const queryData = useQuery([tasksQueryKey, filter, sorter], \n    () => getTasks(filter, sorter), {\n      keepPreviousData: true\n    }\n  )\n\n  return queryData\n}\n\nexport const useSingleTaskQuery = ( taskId ) => {\n  const queryData = useQuery(\n    [ signleTaskQueryKey, taskId ],\n    () => getTaskById(taskId),\n    {\n      select: ({ data }) => {\n        data = {...data, priority: definePriority(data.priority)}\n        return data\n      },\n      // onSuccess: (data) => {\n      //   data = {...data, priority: definePriority(data.priority)}\n      //   console.log(data)\n      // }\n    }\n  )\n\n  return queryData\n}\n","export const signInQueryKey = 'auth-user';\nexport const tasksQueryKey = 'tasks';\nexport const addTaskQueryKey = 'create-task';\nexport const editTaskQueryKey = 'edit-task';\nexport const deleteTaskQueryKey = 'delete-task';\nexport const changeIsDoneQueryKey = 'change-is-done';\nexport const signleTaskQueryKey = 'task';\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { taskTitles } from 'features/task-list/lib/constants';\nimport { useSingleTaskQuery } from 'shared/hooks/useQuery';\nimport { isEmpty } from 'lodash';\n\n\nconst TaskModal = ({ showModal, setShowModal, taskId }) => {\n  const {\n    isLoading,\n    data\n  } = useSingleTaskQuery(taskId)\n  \n  return (\n    <Modal show={showModal} onHide={setShowModal}> \n      <Modal.Header closeButton>\n        <Modal.Title>\n          {!isEmpty(data) &&\n            data.title\n          }\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {\n          isLoading ? (\n            <div>Loading...</div>\n          ) : !isEmpty(data) ? \n            Object.keys(taskTitles).map( (key, i) => {\n              if ( key === 'dueDate' ) {\n                return (\n                  <div key={i}>\n                    <b>{taskTitles[key]}: </b>\n                    <span>{new Date(data[key]).toDateString()}</span>\n                  </div>\n                )\n              } else {\n                return (\n                  <div key={i}>\n                    <b>{taskTitles[key]}: </b>\n                    <span>{data[key]}</span>\n                  </div>\n                )\n              }\n            }) : (\n              <div>Can't find data</div>\n            )\n        }\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default TaskModal;\n","export const taskFormContainerStyles = {\n  width: '23rem',\n  display: 'flex',\n  justifyContent: 'center'\n};\n\nexport const ADD_TASK_INITIAL_VALUES = {\n  title: '',\n  description: '',\n  priority: 2,\n  dueDate: new Date(new Date().getTime() + (24 * 60 * 60 * 1000)).toISOString()\n}\n\nexport const priorityOptions = [\n  {\n    value: 1,\n    name: 'low'\n  },\n  {\n    value: 2,\n    name: 'medium'\n  },\n  {\n    value: 3,\n    name: 'high'\n  },\n  {\n    value: 4,\n    name: 'hot'\n  }\n]\n","import React from 'react';\nimport { inputFieldWidth } from 'shared/ui/Form/constants';\nimport LeftLabel from 'shared/ui/Form/LeftLabel';\n\nconst SimpleSelect = ({\n  onChange,\n  defaultOption,\n  value,\n  options,\n  label,\n  inputWidth = inputFieldWidth,\n  ...props\n}) => {\n  return (\n    <div \n      style={\n        { display: 'inline-block', width: inputWidth, textAlign: 'left' }\n      }\n    >\n      {!!label && <LeftLabel>{label}</LeftLabel>}\n      <select\n        className=\"form-select\"\n        style={{ textAlign: 'left' }}\n        value={value}\n        onChange={onChange}\n        {...props}\n      >\n        { options.map( option => {\n          return (\n            <option value={option.value} key={option.name} name={option.name}>\n              {option.name}\n            </option>\n          )\n        })\n        }\n      </select>\n    </div>\n  )\n}\n\nexport default SimpleSelect;","import React from 'react';\nimport { priorityOptions } from '../../lib/constants';\nimport SimpleSelect from 'shared/ui/Form/SimpleSelect';\n\nconst PriorityField = ({ onChange, defaultOption, value, ...props }) => {\n  return (\n    <SimpleSelect\n      options={priorityOptions}\n      onChange={onChange}\n      defaultOption={defaultOption}\n      value={value}\n      label={'priority'}\n      {...props}\n    />\n  )\n}\n\nexport default PriorityField;","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport { useFormikContext, useField } from 'formik';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst SingleDatePicker = ({ startDate, ...props }) => {\n  const { setFieldValue } = useFormikContext();\n  const [field] = useField(props);\n  let selected = new Date(field.value).toLocaleDateString();\n  return (\n    <div style={{ margin: '1.5rem' }}>\n      <p style={{ textAlign: 'left'}}>due date</p>\n      <DatePicker\n        {...field}\n        {...props}\n        // selected={new Date(field.value)}\n        value={selected}\n        selected={new Date(field.value)}\n        minDate={new Date()}\n        dateFormat='dd/mm/yyyy'\n        onChange={date => {\n          const dateString = new Date(date).toISOString();\n          setFieldValue(field.name, dateString)\n        }}\n        wrapperClassName='datePicker'\n      />\n    </div>\n  );\n};\n\nexport default SingleDatePicker;\n","import React from 'react';\nimport { inputFieldWidth } from 'shared/ui/Form/constants';\nimport { useField } from 'formik';\nimport LeftLabel from './LeftLabel';\n\nconst TextAreaField = ({ label, ...props }) => {\n  const [field, meta] = useField(props.name);\n  return (\n      <LeftLabel>\n        {label}\n        <textarea\n          className={meta.touched && !!meta.error ? 'form-control is-invalid' : 'form-control' }\n          id={props.name}\n          style={{ width: inputFieldWidth }}\n          {...field}\n          {...props}\n        />\n        \n          { meta.touched && !!meta.error ? (\n              <div style={{ color: '#dc3545'}}>\n                {meta.error}\n              </div>\n            ) : null } \n        </LeftLabel>\n  )\n}\n\nexport default TextAreaField;","import { object, string, date, number } from 'yup';\n\nconst TaskFormSchema = object({\n  title: string()\n    .required('Title is required'),\n  description: string()\n    .required('Description is required'),\n  priority: number()\n    .required('Priority is required'),\n  dueDate: date()\n    .required('Choose the due date, please')\n})\n\nexport default TaskFormSchema;","import React from 'react';\n\nconst CenteredContainer = ({ children }) => {\n  return (\n    <div\n      style={{ display: 'flex', flexDirection:'column', alignItems: 'center' }}\n    >\n      { children }\n    </div>\n  )\n}\n\nexport default CenteredContainer;","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { ADD_TASK_INITIAL_VALUES } from '../lib/constants';\nimport { useMutation } from 'react-query';\nimport { addTaskQueryKey } from 'shared/consts/query-constants';\nimport { addTask } from 'shared/api/tasks';\n\nimport PriorityField from './components/PriorityField';\nimport SingleDatePicker from 'shared/ui/Form/SingleDateField';\nimport SimpleTextField from 'shared/ui/Form/SimpleTextField';\nimport TextAreaField from 'shared/ui/Form/TextArea';\nimport BaseButton from 'shared/ui/BaseButton';\nimport TaskFormSchema from '../model/validator';\nimport CenteredContainer from 'shared/ui/Containers/CenteredContainer';\nimport { useTasksQuery } from 'shared/hooks/useQuery';\n\nconst AddTaskForm = ({ setShowModal }) => {\n  const { refetch } = useTasksQuery();\n  const { mutateAsync } = useMutation(addTaskQueryKey, \n    (data) => addTask(data)\n  )\n\n  const handleSubmit = async (values) => {\n    try {\n      await mutateAsync({...values, priority: +values.priority})\n      setShowModal(false)\n      await refetch()\n    } catch (err) {\n      alert('Failed to add task')\n    }\n  }\n  return (\n    <Formik\n      initialValues={ADD_TASK_INITIAL_VALUES}\n      validationSchema={TaskFormSchema}\n      onSubmit={handleSubmit}\n    >\n      { ({ handleChange, values }) => (\n        <Form>\n          <CenteredContainer>\n            <SimpleTextField\n              type='text'\n              name='title'\n              label='title'\n              onChange={handleChange}\n              value={values.title}\n            />\n            <TextAreaField\n              type='text'\n              name='description'\n              label='description'\n              onChange={handleChange}\n              value={values.description}\n            />\n            <PriorityField\n              id='priority'\n              name='priority'\n              onChange={handleChange}\n              value={values.priority}\n            />\n            <SingleDatePicker\n              id='dueDate'\n              name='dueDate'\n            />\n            <div className='mt-3'>\n              <BaseButton type='submit'>Add task</BaseButton>          \n            </div>\n          </CenteredContainer>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\nexport default AddTaskForm;","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport AddTaskForm from './AddTaskForm';\n\nconst TaskFormModal = ({ showModal, setShowModal }) => {\n  return (\n    <Modal show={showModal} onHide={setShowModal}>\n      <Modal.Header closeButton>\n        <Modal.Title> Add task </Modal.Title>\n        </Modal.Header>\n      <Modal.Body>\n        <AddTaskForm setShowModal={setShowModal}/>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default TaskFormModal;","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { useMutation } from 'react-query';\nimport { editTaskQueryKey } from 'shared/consts/query-constants';\nimport { editTask } from 'shared/api/tasks';\n\nimport PriorityField from './components/PriorityField';\nimport SingleDatePicker from 'shared/ui/Form/SingleDateField';\nimport SimpleTextField from 'shared/ui/Form/SimpleTextField';\nimport TextAreaField from 'shared/ui/Form/TextArea';\nimport BaseButton from 'shared/ui/BaseButton';\nimport CenteredContainer from 'shared/ui/Containers/CenteredContainer';\nimport { useSingleTaskQuery, useTasksQuery } from 'shared/hooks/useQuery';\n\nconst EditTaskForm = ({ setShowModal, taskId }) => {\n  const { refetch: refetchAllTasks } = useTasksQuery();\n  const {\n    isLoading,\n    data,\n    refetch: refetchSingleTask\n  } = useSingleTaskQuery(taskId);\n  const { mutateAsync } = useMutation(editTaskQueryKey, \n    (data) => editTask(data)\n  )\n\n  const handleSubmit = async (values) => {\n    try {\n      await mutateAsync(values)\n      setShowModal(false)\n      await refetchSingleTask()\n      await refetchAllTasks()\n    } catch (err) {\n      alert('Failed to edit task')\n    }\n  }\n  return (\n    <>\n    { !isLoading ? (\n      <Formik\n        initialValues={data}\n        onSubmit={handleSubmit}\n      >\n        { ({ handleChange, values }) => (\n          <Form>\n            <CenteredContainer>\n              <SimpleTextField\n                type='text'\n                name='title'\n                label='title'\n                onChange={handleChange}\n                value={values.title}\n              />\n              <TextAreaField\n                type='text'\n                name='description'\n                label='description'\n                onChange={handleChange}\n                value={values.description}\n              />\n              <PriorityField\n                id='priority'\n                name='priority'\n                onChange={handleChange}\n                value={values.priority}\n              />\n              <SingleDatePicker\n                id='dueDate'\n                name='dueDate'\n              />\n              <div className='mt-3'>\n                <BaseButton type='submit'>Edit</BaseButton>          \n              </div>\n            </CenteredContainer>\n          </Form>\n        )}\n      </Formik>\n      ) : (<div>Loading...</div>)\n    }\n  </>\n  )\n}\n\nexport default EditTaskForm;","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport EditTaskForm from './EditTaskForm';\n\nconst TaskFormModal = ({ showModal, setShowModal, taskId }) => {\n  return (\n    <Modal show={showModal} onHide={setShowModal}>\n      <Modal.Header closeButton>\n        <Modal.Title> Edit task </Modal.Title>\n        </Modal.Header>\n      <Modal.Body>\n        <EditTaskForm setShowModal={setShowModal} taskId={taskId}/>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default TaskFormModal;","import React, { useState } from 'react';\nimport { useMutation } from 'react-query';\nimport {\n  deleteTaskQueryKey,\n  changeIsDoneQueryKey\n} from 'shared/consts/query-constants';\nimport {\n  deleteTask,\n  changeIsDone\n} from 'shared/api/tasks';\nimport TaskModal from './TaskModal';\nimport Button from 'react-bootstrap/Button';\nimport { useTasksQuery } from 'shared/hooks/useQuery';\nimport { EditTaskFormModal } from 'features/task-form';\n\nconst Task = ({ task, sorter }) => {\n  const [showEditTaskModal, setShowEditTaskModal] = useState(false);\n  const [showTaskHandlers, setShowTaskHandlers] = useState(false);\n  const [showFullTaskModal, setShowFullTaskModal] = useState(false);\n  const { refetch } = useTasksQuery({}, sorter);\n\n  const { mutateAsync: mutateDelte } = useMutation([deleteTaskQueryKey, task._id],\n    () => deleteTask(task._id)\n  )\n\n  const { mutateAsync: mutateIsDone } = useMutation([changeIsDoneQueryKey, task._id],\n    () => changeIsDone(task._id)\n  )\n\n  const handleDelete = async () => {\n    await mutateDelte()\n    await refetch()\n  }\n\n  const handleChangeChecked = async () => {\n    await mutateIsDone()\n    await refetch()\n  }\n\n  const handleEdit = () => {\n    setShowEditTaskModal(true);\n  }\n  \n  const handleShowFullTask = (e) => {\n    if(\n      e.target.tagName !== 'BUTTON' &&\n      e.target.tagName !== 'INPUT'\n    ) {\n      setShowFullTaskModal(true)\n    }\n  }\n\n  return (\n    <>\n      { showFullTaskModal &&\n        <TaskModal\n          showModal={showFullTaskModal}\n          setShowModal={setShowFullTaskModal}\n          taskId={task._id}\n        />\n      }\n      { showEditTaskModal &&\n        <EditTaskFormModal\n          showModal={showEditTaskModal}\n          setShowModal={setShowEditTaskModal}\n          taskId={task._id}\n        />\n      }\n      <div\n        className={\n          `card shadow p-2 m-3 d-flex\n          ${!task.isDone ? 'card-hover card-active shadow' : 'shadow-sm'}\n          `\n        }\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          height: 64\n        }}\n        onClick={handleShowFullTask}\n        onMouseEnter={() => setShowTaskHandlers(true)}\n        onMouseLeave={() => setShowTaskHandlers(false)}\n      >\n        <div className='form-check'>\n          <input\n            className='form-check-input'\n            type='checkbox'\n            checked={task.isDone}\n            onChange={handleChangeChecked}\n            id='is-done-checkbox'\n          />\n          <label\n            className={\n              `form-check-label ${task.isDone && 'done-task-title'}`\n            }\n          >\n            {task.title}\n          </label>\n        </div>\n          { showTaskHandlers && \n              <div className='ms-2'>\n                <Button\n                  variant='outline-danger'\n                  style={{ height: 25, width: 60, padding: '0px 5px' }}\n                  onClick={handleDelete}\n                >\n                  Delete\n                </Button>\n                <br/>\n                <Button\n                  variant='outline-warning'\n                  style={{ height: 25, width: 60, padding: '0px 5px' }}\n                  onClick={handleEdit}\n                >\n                  Edit\n                </Button>\n              </div>\n          }\n      </div>\n    </>\n  )\n}\n\nexport default Task","import React from 'react';\nimport { sortOptions } from 'features/task-list/lib/constants';\nimport SimpleSelect from 'shared/ui/Form/SimpleSelect';\n\nconst SortTasks = ({ onChange, value, inputWidth, ...props }) => {\n  return (\n    <SimpleSelect\n      inputWidth={inputWidth}\n      options={sortOptions}\n      defaultOption={sortOptions[0]}\n      value={value}\n      onChange={onChange}\n      {...props}\n    />\n  )\n}\n\nexport default SortTasks;","import React, { useState } from 'react';\nimport BaseButton from 'shared/ui/BaseButton';\nimport Task from './components/Task';\nimport SortTasks from './components/SortTasks';\nimport { useTasksQuery } from 'shared/hooks/useQuery';\nimport { AddTaskFormModal } from 'features/task-form';\nimport { sortOptions } from 'features/task-list/lib/constants';\n\nimport { taskListCardStyles } from '../lib/constants';\n\nconst TaskList = () => {\n  const [showAddTaskModal, setShowAddTaskModal] = useState(false);\n  const [sortValue, setSortValue] = useState(sortOptions[0])\n  const {\n    isLoading,\n    data: response,\n    isError\n  } = useTasksQuery({}, [sortValue.value]);\n\n  return (\n    <>\n      <AddTaskFormModal\n        showModal={showAddTaskModal}\n        setShowModal={setShowAddTaskModal}\n      />\n      <div className='card shadow mt-3' style={taskListCardStyles}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            margin: '10px 18px 0 10px'\n          }}\n        >\n          <BaseButton onClick={() => setShowAddTaskModal(true)}>+ Add task</BaseButton>\n          <SortTasks\n            inputWidth={150}\n            value={sortValue.value}\n            onChange={(e) => {\n              setSortValue({\n                value: e.target.value,\n                name: e.target.options[e.target.selectedIndex].text\n              })\n            }}\n          />\n        </div>\n        { isLoading ?\n          (<div>LOADING...</div>) : response.data.length ?\n          response.data.map( task => {\n            return (\n              <Task key={task._id} task={task} sorter={[sortValue.value]}/>\n            )\n          }) : !!isError ? (\n            <h4 className='m-3'>Error Occured!</h4>\n          ) : (\n            <h4 className='m-3'>No tasks yet, add one!</h4>\n          )\n        }\n      </div>\n    </>\n  )\n}\n\nexport default TaskList;","import React from 'react';\nimport { NavBar } from 'widgets/navBar';\nimport { TaskList } from 'features/task-list';\nimport CenteredContainer from 'shared/ui/Containers/CenteredContainer';\n\nconst HomePage = () => {\n  return (\n    <>\n      <NavBar/>\n      <CenteredContainer>\n        <TaskList/>\n      </CenteredContainer>\n    </>\n  )\n}\n\nexport default HomePage","import React from 'react';\n\nconst BaseButton = ({ children, ...props }) => {\n  return (\n    <button\n      type={`button `}\n      className={`btn btn-${!!props.variant ? props.variant : 'primary'} m-2`}\n      {...props}\n    >\n        { children }\n    </button>\n  )\n};\n\nexport default BaseButton;","import React from 'react';\n\nconst LeftLabel = ({ children }) => {\n  return (\n    <label\n      className='form-label'\n      style={{ textAlign: 'left' }}\n    >{children}</label>\n  )\n}\n\nexport default LeftLabel;","import React from 'react';\nimport { inputFieldWidth } from 'shared/ui/Form/constants';\nimport { useField } from 'formik';\nimport LeftLabel from './LeftLabel';\n\nconst SimpleTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props.name);\n  return (\n      <LeftLabel>\n        {label}\n        <input\n          className={\n            meta.touched && !!meta.error ? 'form-control is-invalid'\n            : 'form-control'\n          }\n          id={props.name}\n          style={{ width: inputFieldWidth }}\n          {...field}\n          {...props}\n        />\n        \n          { meta.touched && !!meta.error ? (\n              <div style={{ color: '#dc3545'}}>\n                {meta.error}\n              </div>\n            ) : null } \n        </LeftLabel>\n  )\n}\n\nexport default SimpleTextField;","export const inputFieldWidth = 250;"],"names":["logout","useAuth","handleLogOut","className","style","backgroundColor","to","BaseButton","onClick","taskURL","getTasks","filter","sorter","page","queryString","isEmpty","Object","keys","forEach","key","sortingString","sortStr","createQueryString","http","taskListCardStyles","maxWidth","minWidth","taskTitles","description","priority","dueDate","sortOptions","value","name","definePriority","useTasksQuery","useQuery","keepPreviousData","useSingleTaskQuery","taskId","id","select","data","showModal","setShowModal","isLoading","Modal","show","onHide","closeButton","title","map","i","Date","toDateString","ADD_TASK_INITIAL_VALUES","getTime","toISOString","priorityOptions","onChange","defaultOption","options","label","inputWidth","inputFieldWidth","props","display","width","textAlign","LeftLabel","option","startDate","setFieldValue","useFormikContext","useField","field","selected","toLocaleDateString","margin","minDate","dateFormat","date","dateString","wrapperClassName","meta","touched","error","color","object","string","required","number","children","flexDirection","alignItems","refetch","mutateAsync","useMutation","addTask","handleSubmit","values","alert","initialValues","validationSchema","TaskFormSchema","onSubmit","handleChange","SimpleTextField","type","TextArea","refetchAllTasks","refetchSingleTask","_id","editTask","task","useState","showEditTaskModal","setShowEditTaskModal","showTaskHandlers","setShowTaskHandlers","showFullTaskModal","setShowFullTaskModal","mutateDelte","mutateIsDone","handleDelete","handleChangeChecked","EditTaskFormModal","isDone","justifyContent","height","e","target","tagName","onMouseEnter","onMouseLeave","checked","Button","variant","padding","showAddTaskModal","setShowAddTaskModal","sortValue","setSortValue","response","isError","selectedIndex","text","length"],"sourceRoot":""}