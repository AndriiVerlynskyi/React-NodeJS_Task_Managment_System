{"version":3,"file":"static/js/330.ca035669.chunk.js","mappings":"8JAAaA,EAAwB,CACnCC,MAAO,S,8BCDIC,EAAyB,CACpCC,SAAU,GACVC,MAAO,GACPC,SAAU,I,wCCUZ,GAXqBC,EAAAA,EAAAA,IAAO,CAC1BH,UAAUI,EAAAA,EAAAA,MACPC,SAAS,wBACZJ,OAAOG,EAAAA,EAAAA,MACJC,SAAS,qBACTJ,MAAM,4BACTC,UAAUE,EAAAA,EAAAA,MACPC,SAAS,wBACTC,IAAI,EAAG,uC,mBCkDZ,EAnDmB,WACjB,IAAQC,GAAaC,EAAAA,EAAAA,KAAbD,SACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAY,yCAAG,WAAOC,GAAP,+FAEXL,EAASK,GAFE,OAGjBH,EAAS,WAHQ,gDAKjBI,QAAQC,IAAR,MACAC,MAAM,8BANW,yDAAH,sDAUlB,OACE,SAAC,KAAD,CACEC,cAAejB,EACfkB,iBAAkBC,EAClBC,SAAUR,EAHZ,SAKI,SAAAS,GAAK,OACL,UAAC,KAAD,YACE,SAACC,EAAA,EAAD,CACEC,KAAK,OACLC,KAAK,WACLC,MAAM,WACNC,SAAUL,EAAMM,aAChBC,MAAOP,EAAMR,OAAOZ,YAEtB,SAACqB,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,QACLC,MAAM,QACNC,SAAUL,EAAMM,aAChBC,MAAOP,EAAMR,OAAOX,SAEtB,SAACoB,EAAA,EAAD,CACEC,KAAK,WACLC,KAAK,WACLC,MAAM,WACNC,SAAUL,EAAMM,aAChBC,MAAOP,EAAMR,OAAOV,YAEtB,gBAAK0B,UAAU,OAAf,UACE,SAACC,EAAA,EAAD,CAAYP,KAAK,SAAjB,+B,UC/BZ,EAhBe,WACb,OACE,iBAAKM,UAAU,mBAAmBE,MAAQjC,EAA1C,WACE,iBAAK+B,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,sBACA,SAAC,EAAD,QAEF,gBAAKA,UAAU,cAAf,UACE,SAAC,KAAD,CAAMG,GAAG,SAAT,2BCFR,EARmB,WACjB,OACE,gBAAKD,MAAO,CAAEE,QAAS,OAAQC,eAAe,UAA9C,UACE,SAAC,EAAD,Q,+ECQN,IAZmB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAad,GAAY,YAC7C,OACE,mCACEE,KAAI,UACJM,UAAS,kBAAeR,EAAMe,QAAUf,EAAMe,QAAU,UAA/C,SACLf,GAHN,aAKMc,O,0CCEV,IATkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,OACE,kBACEN,UAAU,aACVE,MAAO,CAAEM,UAAW,QAFtB,SAGEF,M,mHCuBN,IAzBwB,SAAC,GAAyB,IAAvBV,EAAsB,EAAtBA,MAAUJ,GAAY,YAC/C,GAAsBiB,EAAAA,EAAAA,IAASjB,EAAMG,MAArC,eAAOe,EAAP,KAAcC,EAAd,KACA,OACI,UAAC,IAAD,WACGf,GACD,kCACEI,UACEW,EAAKC,SAAaD,EAAKE,MAAQ,0BAC7B,eAEJC,GAAItB,EAAMG,KACVO,MAAO,CAAEhC,MAAO6C,EAAAA,IACZL,GACAlB,IAGFmB,EAAKC,SAAaD,EAAKE,OACrB,gBAAKX,MAAO,CAAEc,MAAO,WAArB,SACGL,EAAKE,QAEN,U,qDCzBT,IAAME,EAAkB","sources":["features/sign-up-form/lib/style-constants.js","features/sign-up-form/lib/constants.js","features/sign-up-form/model/validator.js","features/sign-up-form/ui/SignUpForm.jsx","features/sign-up-form/ui/SignUp.jsx","pages/Auth/sign-up/index.jsx","shared/ui/BaseButton/index.jsx","shared/ui/Form/LeftLabel.jsx","shared/ui/Form/SimpleTextField.jsx","shared/ui/Form/constants.js"],"sourcesContent":["export const signUpContainerStyles = {\n  width: '23rem'\n};","export const SIGN_UP_INITIAL_VALUES = {\n  username: '',\n  email: '',\n  password: ''\n}","import { object, string } from 'yup';\n\nconst SignUpSchema = object({\n  username: string()\n    .required('Username is required'),\n  email: string()\n    .required('Email is required')\n    .email('Enter valid email please'),\n  password: string()\n    .required('Password is required')\n    .min(6, 'Should have at least 6 characters')\n})\n\nexport default SignUpSchema;\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { SIGN_UP_INITIAL_VALUES } from '../lib/constants';\nimport { useNavigate } from 'react-router-dom';\nimport SimpleTextField from 'shared/ui/Form/SimpleTextField';\nimport BaseButton from 'shared/ui/BaseButton';\nimport SignUpSchema from '../model/validator';\nimport { useAuth } from 'shared/auth';\n\nconst SignUpForm = () => {\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const handleSubmit = async (values) => {\n    try {\n      await register(values)\n      navigate('/signin')\n    } catch (err) {\n      console.log(err)\n      alert('Failed to sign up new user')\n    }\n  }\n\n  return (\n    <Formik\n      initialValues={SIGN_UP_INITIAL_VALUES}\n      validationSchema={SignUpSchema}\n      onSubmit={handleSubmit}\n    >\n      { props => (\n        <Form>\n          <SimpleTextField\n            type='text'\n            name='username'\n            label='username'\n            onChange={props.handleChange}\n            value={props.values.username}\n          />\n          <SimpleTextField\n            type='email'\n            name='email'\n            label='email'\n            onChange={props.handleChange}\n            value={props.values.email}\n          />\n          <SimpleTextField\n            type='password'\n            name='password'\n            label='password'\n            onChange={props.handleChange}\n            value={props.values.password}\n          />\n          <div className='mt-2'>\n            <BaseButton type='submit'>Sign up!</BaseButton>          \n          </div>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\nexport default SignUpForm","import React from 'react';\nimport { signUpContainerStyles } from '../lib/style-constants';\nimport SignUpForm from './SignUpForm';\nimport { Link } from 'react-router-dom';\n\nconst SignUp = () => {\n  return (\n    <div className=\"card shadow mt-5\" style={ signUpContainerStyles }>\n      <div className=\"card-body\">\n        <h4 className='card-title'>Sign up</h4>\n        <SignUpForm/>\n      </div>\n      <div className='card-footer'>\n        <Link to='signin'>\n          Sign in\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp;","import React from 'react';\nimport { SignUp } from 'features/sign-up-form';\n\nconst SignUpPage = () => {\n  return (\n    <div style={{ display: 'flex', justifyContent:'center' }}>\n      <SignUp/>\n    </div>\n  )\n};\n\nexport default SignUpPage;","import React from 'react';\n\nconst BaseButton = ({ children, ...props }) => {\n  return (\n    <button\n      type={`button `}\n      className={`btn btn-${!!props.variant ? props.variant : 'primary'} m-2`}\n      {...props}\n    >\n        { children }\n    </button>\n  )\n};\n\nexport default BaseButton;","import React from 'react';\n\nconst LeftLabel = ({ children }) => {\n  return (\n    <label\n      className='form-label'\n      style={{ textAlign: 'left' }}\n    >{children}</label>\n  )\n}\n\nexport default LeftLabel;","import React from 'react';\nimport { inputFieldWidth } from 'shared/ui/Form/constants';\nimport { useField } from 'formik';\nimport LeftLabel from './LeftLabel';\n\nconst SimpleTextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props.name);\n  return (\n      <LeftLabel>\n        {label}\n        <input\n          className={\n            meta.touched && !!meta.error ? 'form-control is-invalid'\n            : 'form-control'\n          }\n          id={props.name}\n          style={{ width: inputFieldWidth }}\n          {...field}\n          {...props}\n        />\n        \n          { meta.touched && !!meta.error ? (\n              <div style={{ color: '#dc3545'}}>\n                {meta.error}\n              </div>\n            ) : null } \n        </LeftLabel>\n  )\n}\n\nexport default SimpleTextField;","export const inputFieldWidth = 250;"],"names":["signUpContainerStyles","width","SIGN_UP_INITIAL_VALUES","username","email","password","object","string","required","min","register","useAuth","navigate","useNavigate","handleSubmit","values","console","log","alert","initialValues","validationSchema","SignUpSchema","onSubmit","props","SimpleTextField","type","name","label","onChange","handleChange","value","className","BaseButton","style","to","display","justifyContent","children","variant","textAlign","useField","field","meta","touched","error","id","inputFieldWidth","color"],"sourceRoot":""}